.header {
  // position: relative; // Required for menu content div `Approach #2` styles
  width: 100%;
  padding: 8px;

  display: flex;
  align-items: center;
  justify-content: space-between; // left align the menu toggle, right align the h1
  gap: 8px;

  background-color: hsl(162deg 65% 45%);
  border-radius: 4px;

  > h1 {
    order: 1; // swap visual order with nav toggle button
    margin: 0;
    transition: font-size 0.3s;

    font-size: 1.2rem;
    text-align: right;

    @media (min-width: 360px) {
      font-size: 28px;
    }
  }
}

.navbar {
  > button {
    // Style reset
    background:transparent;
    border: none;
    cursor: pointer;
    color: inherit;
    margin: 0;
    padding: 0;

    // Width and Height are sized to scale proportionally to the SVG icon size (1em).
    // Adjusting font-size will scale all dimensions accordingly.
    font-size: 2rem;
    width: 1.5em;
    height: 1.5em;
    // Affects vertical alignment of svg icons
    line-height: 0;

    // Circle button style with a box-shadow as a border (that doesn't interfere with layout)
    border-radius: 50%;
    background-color: rgba(0, 0, 0, 0.25);
    &:hover, &:active {
      background-color: rgba(0, 0, 0, 0.5);
    }

    --border: 0 0 0 2px hsla(170deg, 90%, 70%, 0.5);
    --border-focus: inset var(--border), 0 0 0 4px dodgerblue;
    box-shadow: var(--border);
    &:focus {
      outline: none;
      box-shadow: var(--border-focus);

      // Remove focus-ring for non-keyboard triggered focus
      &:not(:focus-visible) { box-shadow: var(--border); }
    }
  }

  > div {
    left: 0;

    width: 100%;
    margin: 0;
    padding: 0;

    // Debug colour for experimenting with layout approaches.
    background-color: green;
    // Same as bg colour for `html`; hides the page content below by covering it.
    background-color: rgb(36 39 56);

    /* === Approach #1 === */
    // Seems "hacky" with no apparent control regarding the hidden scrollbar issue:
    position: fixed; // Note dimensions can overlap/cover any visible scrollbars and prevents interaction with them.
    // height: 100%; // extends to full viewport height
    margin-top: 16px; // 8px padding (nav around button) + 8px added margin (after nav height)

    /* === Approach #2 === */
    // This works well if you don't need to extend the height to bottom of viewport
    // Relies on header element having `position: relative`.
    position: absolute;
    top: 100%;
    margin-top: 8px; // 8px added margin (after nav height)

    /* === Approach #3 === */
    // This version of absolute requires header element to not have `position: relative`
    // So that it can properly be contained within the viewport bounds.
    position: absolute;
    top: 80px; // 64px header element + 16px margin (8px top and bottom)
    bottom: 0; // Stretch to bottom of viewport exactly.
    margin: 0;

    // Required if not using `position: relative` on .App, but using `Approach #3` above:
    // min-width: 180px;

    > p {
      margin: 0;
      padding: 8px;
      text-align: center;
    }
  }
}